KMD
00000000:             ; ;############################################kmd
00000000:             ; ;# Written By: Sam da Costa                 #
00000000:             ; ;# Uni ID: p11469sd                         #
00000000:             ; ;# Exercise:  3                             #
00000000:             ; ;# Purpose: This file demos different parts #
00000000:             ; ;# of the lcd module                        #
00000000:             ; ;############################################
00000000:             ; INCLUDE os.s
00000000:             ; ORIGIN &00000000
00000000: EA000006    ; B reset_handler                       ; +0   (00)
00000004: EA00001D    ; B undefined_instruction_handler       ; +4   (04)
00000008: EA000020    ; B svc_handler                         ; +8   (08)
0000000C: EA000020    ; B prefetch_abort_handler              ; +12  (0C)
00000010: EA000029    ; B data_abort                          ; +16  (10)
00000014: E1A00000    ; NOP                                   ; +20  (14)
00000018: EA000031    ; B IRQ_handler                         ; +24  (18)
0000001C: EA000031    ; B FIQ_handler                         ; +28  (1C)
00000020:             ; 
00000020:             ; reset_handler ; code to reset the proccesor to known state
00000020: E3A00000    ; MOV R0, #0
00000024: E3A01000    ; MOV R1, #0
00000028: E3A02000    ; MOV R2, #0
0000002C: E3A03000    ; MOV R3, #0
00000030: E3A04000    ; MOV R4, #0
00000034: E3A05000    ; MOV R5, #0
00000038: E3A06000    ; MOV R6, #0
0000003C: E3A07000    ; MOV R7, #0
00000040: E3A08000    ; MOV R8, #0
00000044: E3A09000    ; MOV R9, #0
00000048: E3A0A000    ; MOV R10, #0
0000004C: E3A0B000    ; MOV R11, #0
00000050: E3A0C000    ; MOV R12, #0
00000054: E28FD098    ; ADRL SP, stackend_svc
00000058: E28DDA02    ; 
0000005C: E28F00A9    ; ADRL R0, FF
00000060: E2800C23    ; 
00000064: EB000941    ; BL printstr   ;blanks screen and resets cursorposx and cursorposy
00000068: E10F0000    ; MRS  R0, CPSR
0000006C: E3C0000F    ; BIC  R0, R0, #&0F
00000070: E121F000    ; MSR CPSR_c, R0
00000074: E28FD078    ; ADRL SP, stackend_user
00000078: E28DDA01    ; 
0000007C: EA0008E4    ; B usercode
00000080:             ; 
00000080:             ; ; Jump to user code
00000080:             ; undefined_instruction_handler
00000080: E28F0090    ; ADRL R0, UndefinedError
00000084: E2800A02    ; 
00000088: EB000938    ; BL printstr
0000008C: EA000016    ; B halt
00000090:             ; 
00000090:             ; svc_handler
00000090: EA000015    ; B halt
00000094:             ; 
00000094:             ; prefetch_abort_handler
00000094: E28F0073    ; ADRL R0, CR
00000098: E2800C23    ; 
0000009C: EB000933    ; BL printstr
000000A0: E28F0061    ; ADRL R0, LF
000000A4: E2800C23    ; 
000000A8: EB000930    ; BL printstr
000000AC: E28F0048    ; ADRL R0, MemoryError
000000B0: E2800A02    ; 
000000B4: EB00092D    ; BL printstr
000000B8: EA00000B    ; B halt
000000BC:             ; 
000000BC:             ; data_abort
000000BC: E28F004B    ; ADRL R0, CR
000000C0: E2800C23    ; 
000000C4: EB000929    ; BL printstr
000000C8: E28F0039    ; ADRL R0, LF
000000CC: E2800C23    ; 
000000D0: EB000926    ; BL printstr
000000D4: E28F0020    ; ADRL R0, MemoryError
000000D8: E2800A02    ; 
000000DC: EB000923    ; BL printstr
000000E0: EA000001    ; B halt
000000E4:             ; 
000000E4:             ; IRQ_handler
000000E4: EA000000    ; B halt
000000E8:             ; 
000000E8:             ; FIQ_handler
000000E8: EAFFFFFF    ; B halt
000000EC:             ; 
000000EC:             ; halt
000000EC: E1A00000    ; MOV R0, R0
000000F0: EAFFFFFD    ; B halt
000000F4:             ; stack_user DEFS &1000
000010F4:             ; stackend_user
000010F4:             ; stack_svc DEFS &1000
000020F4:             ; stackend_svc
000020F4:             ; data
000020F4: 00000000    ; cursorposx      DEFW 0
000020F8: 00000000    ; cursorposy      DEFW 0
000020FC:             ; ALIGN
000020FC: 4D 65 6D 6F ; MemoryError     DEFB "Memory Error has occured",0
00002100: 72 79 20 45 ; 
00002104: 72 72 6F 72 ; 
00002108: 20 68 61 73 ; 
0000210C: 20 6F 63 63 ; 
00002110: 75 72 65 64 ; 
00002114: 00          ; 
00002118:             ; ALIGN
00002118: 55 6E 64 65 ; UndefinedError  DEFB "Undefined Instruction encountered",0
0000211C: 66 69 6E 65 ; 
00002120: 64 20 49 6E ; 
00002124: 73 74 72 75 ; 
00002128: 63 74 69 6F ; 
0000212C: 6E 20 65 6E ; 
00002130: 63 6F 75 6E ; 
00002134: 74 65 72 65 ; 
00002138: 64 00       ; 
0000213C:             ; ALIGN
0000213C:             ; INCLUDE characterDefinitions.s
0000213C: 00 00 00 00 ; font_32 defb 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002140: 00 00 00    ; 
00002143: 5F 00 00 00 ; font_33 defb 0x5f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002147: 00 00 00    ; 
0000214A: 03 00 03 00 ; font_34 defb 0x03, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00
0000214E: 00 00 00    ; 
00002151: 14 7F 14 7F ; font_35 defb 0x14, 0x7f, 0x14, 0x7f, 0x14, 0x00, 0x00
00002155: 14 00 00    ; 
00002158: 6F 49 C9 7B ; font_36 defb 0x6f, 0x49, 0xc9, 0x7b, 0x00, 0x00, 0x00
0000215C: 00 00 00    ; 
0000215F: 63 13 08 64 ; font_37 defb 0x63, 0x13, 0x08, 0x64, 0x63, 0x00, 0x00
00002163: 63 00 00    ; 
00002166: 7F C9 49 63 ; font_38 defb 0x7f, 0xc9, 0x49, 0x63, 0x00, 0x00, 0x00
0000216A: 00 00 00    ; 
0000216D: 03 00 00 00 ; font_39 defb 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002171: 00 00 00    ; 
00002174: 3E 41 00 00 ; font_40 defb 0x3e, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00
00002178: 00 00 00    ; 
0000217B: 41 3E 00 00 ; font_41 defb 0x41, 0x3e, 0x00, 0x00, 0x00, 0x00, 0x00
0000217F: 00 00 00    ; 
00002182: 0A 04 1F 04 ; font_42 defb 0x0a, 0x04, 0x1f, 0x04, 0x0a, 0x00, 0x00
00002186: 0A 00 00    ; 
00002189: 08 08 3E 08 ; font_43 defb 0x08, 0x08, 0x3e, 0x08, 0x08, 0x00, 0x00
0000218D: 08 00 00    ; 
00002190: C0 00 00 00 ; font_44 defb 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002194: 00 00 00    ; 
00002197: 08 08 08 08 ; font_45 defb 0x08, 0x08, 0x08, 0x08, 0x00, 0x00, 0x00
0000219B: 00 00 00    ; 
0000219E: 40 00 00 00 ; font_46 defb 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000021A2: 00 00 00    ; 
000021A5: 60 10 08 04 ; font_47 defb 0x60, 0x10, 0x08, 0x04, 0x03, 0x00, 0x00
000021A9: 03 00 00    ; 
000021AC: 7F 41 41 7F ; font_48 defb 0x7f, 0x41, 0x41, 0x7f, 0x00, 0x00, 0x00
000021B0: 00 00 00    ; 
000021B3: 01 7F 00 00 ; font_49 defb 0x01, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00
000021B7: 00 00 00    ; 
000021BA: 7B 49 49 6F ; font_50 defb 0x7b, 0x49, 0x49, 0x6f, 0x00, 0x00, 0x00
000021BE: 00 00 00    ; 
000021C1: 63 49 49 7F ; font_51 defb 0x63, 0x49, 0x49, 0x7f, 0x00, 0x00, 0x00
000021C5: 00 00 00    ; 
000021C8: 0F 08 08 7F ; font_52 defb 0x0f, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x00
000021CC: 00 00 00    ; 
000021CF: 6F 49 49 7B ; font_53 defb 0x6f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00
000021D3: 00 00 00    ; 
000021D6: 7F 49 49 7B ; font_54 defb 0x7f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00
000021DA: 00 00 00    ; 
000021DD: 03 01 01 7F ; font_55 defb 0x03, 0x01, 0x01, 0x7f, 0x00, 0x00, 0x00
000021E1: 00 00 00    ; 
000021E4: 7F 49 49 7F ; font_56 defb 0x7f, 0x49, 0x49, 0x7f, 0x00, 0x00, 0x00
000021E8: 00 00 00    ; 
000021EB: 0F 09 09 7F ; font_57 defb 0x0f, 0x09, 0x09, 0x7f, 0x00, 0x00, 0x00
000021EF: 00 00 00    ; 
000021F2: 41 00 00 00 ; font_58 defb 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000021F6: 00 00 00    ; 
000021F9: C1 00 00 00 ; font_59 defb 0xc1, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000021FD: 00 00 00    ; 
00002200: 08 14 22 00 ; font_60 defb 0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00
00002204: 00 00 00    ; 
00002207: 14 14 14 14 ; font_61 defb 0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00
0000220B: 00 00 00    ; 
0000220E: 22 14 08 00 ; font_62 defb 0x22, 0x14, 0x08, 0x00, 0x00, 0x00, 0x00
00002212: 00 00 00    ; 
00002215: 03 59 09 0F ; font_63 defb 0x03, 0x59, 0x09, 0x0f, 0x00, 0x00, 0x00
00002219: 00 00 00    ; 
0000221C: 7F 41 5D 55 ; font_64 defb 0x7f, 0x41, 0x5d, 0x55, 0x5f, 0x00, 0x00
00002220: 5F 00 00    ; 
00002223: 7F 09 09 7F ; font_65 defb 0x7f, 0x09, 0x09, 0x7f, 0x00, 0x00, 0x00
00002227: 00 00 00    ; 
0000222A: 7F 49 49 77 ; font_66 defb 0x7f, 0x49, 0x49, 0x77, 0x00, 0x00, 0x00
0000222E: 00 00 00    ; 
00002231: 7F 41 41 63 ; font_67 defb 0x7f, 0x41, 0x41, 0x63, 0x00, 0x00, 0x00
00002235: 00 00 00    ; 
00002238: 7F 41 41 3E ; font_68 defb 0x7f, 0x41, 0x41, 0x3e, 0x00, 0x00, 0x00
0000223C: 00 00 00    ; 
0000223F: 7F 49 49 63 ; font_69 defb 0x7f, 0x49, 0x49, 0x63, 0x00, 0x00, 0x00
00002243: 00 00 00    ; 
00002246: 7F 09 09 03 ; font_70 defb 0x7f, 0x09, 0x09, 0x03, 0x00, 0x00, 0x00
0000224A: 00 00 00    ; 
0000224D: 7F 41 49 7B ; font_71 defb 0x7f, 0x41, 0x49, 0x7b, 0x00, 0x00, 0x00
00002251: 00 00 00    ; 
00002254: 7F 08 08 7F ; font_72 defb 0x7f, 0x08, 0x08, 0x7f, 0x00, 0x00, 0x00
00002258: 00 00 00    ; 
0000225B: 41 7F 41 00 ; font_73 defb 0x41, 0x7f, 0x41, 0x00, 0x00, 0x00, 0x00
0000225F: 00 00 00    ; 
00002262: 60 40 40 7F ; font_74 defb 0x60, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00
00002266: 00 00 00    ; 
00002269: 7F 08 08 77 ; font_75 defb 0x7f, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00
0000226D: 00 00 00    ; 
00002270: 7F 40 40 60 ; font_76 defb 0x7f, 0x40, 0x40, 0x60, 0x00, 0x00, 0x00
00002274: 00 00 00    ; 
00002277: 7F 01 01 7F ; font_77 defb 0x7f, 0x01, 0x01, 0x7f, 0x01, 0x01, 0x7f
0000227B: 01 01 7F    ; 
0000227E: 7F 01 01 7F ; font_78 defb 0x7f, 0x01, 0x01, 0x7f, 0x00, 0x00, 0x00
00002282: 00 00 00    ; 
00002285: 7F 41 41 7F ; font_79 defb 0x7f, 0x41, 0x41, 0x7f, 0x00, 0x00, 0x00
00002289: 00 00 00    ; 
0000228C: 7F 09 09 0F ; font_80 defb 0x7f, 0x09, 0x09, 0x0f, 0x00, 0x00, 0x00
00002290: 00 00 00    ; 
00002293: 7F 41 C1 7F ; font_81 defb 0x7f, 0x41, 0xc1, 0x7f, 0x00, 0x00, 0x00
00002297: 00 00 00    ; 
0000229A: 7F 09 09 77 ; font_82 defb 0x7f, 0x09, 0x09, 0x77, 0x00, 0x00, 0x00
0000229E: 00 00 00    ; 
000022A1: 6F 49 49 7B ; font_83 defb 0x6f, 0x49, 0x49, 0x7b, 0x00, 0x00, 0x00
000022A5: 00 00 00    ; 
000022A8: 01 01 7F 01 ; font_84 defb 0x01, 0x01, 0x7f, 0x01, 0x01, 0x00, 0x00
000022AC: 01 00 00    ; 
000022AF: 7F 40 40 7F ; font_85 defb 0x7f, 0x40, 0x40, 0x7f, 0x00, 0x00, 0x00
000022B3: 00 00 00    ; 
000022B6: 7F 20 10 0F ; font_86 defb 0x7f, 0x20, 0x10, 0x0f, 0x00, 0x00, 0x00
000022BA: 00 00 00    ; 
000022BD: 7F 40 40 7F ; font_87 defb 0x7f, 0x40, 0x40, 0x7f, 0x40, 0x40, 0x7f
000022C1: 40 40 7F    ; 
000022C4: 77 08 08 77 ; font_88 defb 0x77, 0x08, 0x08, 0x77, 0x00, 0x00, 0x00
000022C8: 00 00 00    ; 
000022CB: 6F 48 48 7F ; font_89 defb 0x6f, 0x48, 0x48, 0x7f, 0x00, 0x00, 0x00
000022CF: 00 00 00    ; 
000022D2: 71 49 49 47 ; font_90 defb 0x71, 0x49, 0x49, 0x47, 0x00, 0x00, 0x00
000022D6: 00 00 00    ; 
000022D9: 7F 41 00 00 ; font_91 defb 0x7f, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00
000022DD: 00 00 00    ; 
000022E0: 03 04 08 10 ; font_92 defb 0x03, 0x04, 0x08, 0x10, 0x60, 0x00, 0x00
000022E4: 60 00 00    ; 
000022E7: 41 7F 00 00 ; font_93 defb 0x41, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00
000022EB: 00 00 00    ; 
000022EE: 04 02 01 02 ; font_94 defb 0x04, 0x02, 0x01, 0x02, 0x04, 0x00, 0x00
000022F2: 04 00 00    ; 
000022F5: 80 80 80 80 ; font_95 defb 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00
000022F9: 00 00 00    ; 
000022FC: 03 00 00 00 ; font_96 defb 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002300: 00 00 00    ; 
00002303: 74 54 54 7C ; font_97 defb 0x74, 0x54, 0x54, 0x7c, 0x00, 0x00, 0x00
00002307: 00 00 00    ; 
0000230A: 7F 44 44 7C ; font_98 defb 0x7f, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00
0000230E: 00 00 00    ; 
00002311: 7C 44 44 6C ; font_99 defb 0x7c, 0x44, 0x44, 0x6c, 0x00, 0x00, 0x00
00002315: 00 00 00    ; 
00002318: 7C 44 44 7F ; font_100 defb 0x7c, 0x44, 0x44, 0x7f, 0x00, 0x00, 0x00
0000231C: 00 00 00    ; 
0000231F: 7C 54 54 5C ; font_101 defb 0x7c, 0x54, 0x54, 0x5c, 0x00, 0x00, 0x00
00002323: 00 00 00    ; 
00002326: 7F 05 05 01 ; font_102 defb 0x7f, 0x05, 0x05, 0x01, 0x00, 0x00, 0x00
0000232A: 00 00 00    ; 
0000232D: BC A4 A4 FC ; font_103 defb 0xbc, 0xa4, 0xa4, 0xfc, 0x00, 0x00, 0x00
00002331: 00 00 00    ; 
00002334: 7F 04 04 7C ; font_104 defb 0x7f, 0x04, 0x04, 0x7c, 0x00, 0x00, 0x00
00002338: 00 00 00    ; 
0000233B: 7D 00 00 00 ; font_105 defb 0x7d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
0000233F: 00 00 00    ; 
00002342: 80 FD 00 00 ; font_106 defb 0x80, 0xfd, 0x00, 0x00, 0x00, 0x00, 0x00
00002346: 00 00 00    ; 
00002349: 7F 04 04 7A ; font_107 defb 0x7f, 0x04, 0x04, 0x7a, 0x00, 0x00, 0x00
0000234D: 00 00 00    ; 
00002350: 7F 00 00 00 ; font_108 defb 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
00002354: 00 00 00    ; 
00002357: 7C 04 04 7C ; font_109 defb 0x7c, 0x04, 0x04, 0x7c, 0x04, 0x04, 0x7c
0000235B: 04 04 7C    ; 
0000235E: 7C 04 04 7C ; font_110 defb 0x7c, 0x04, 0x04, 0x7c, 0x00, 0x00, 0x00
00002362: 00 00 00    ; 
00002365: 7C 44 44 7C ; font_111 defb 0x7c, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00
00002369: 00 00 00    ; 
0000236C: FC 44 44 7C ; font_112 defb 0xfc, 0x44, 0x44, 0x7c, 0x00, 0x00, 0x00
00002370: 00 00 00    ; 
00002373: 7C 44 44 FC ; font_113 defb 0x7c, 0x44, 0x44, 0xfc, 0x00, 0x00, 0x00
00002377: 00 00 00    ; 
0000237A: 7C 04 04 0C ; font_114 defb 0x7c, 0x04, 0x04, 0x0c, 0x00, 0x00, 0x00
0000237E: 00 00 00    ; 
00002381: 5C 54 54 74 ; font_115 defb 0x5c, 0x54, 0x54, 0x74, 0x00, 0x00, 0x00
00002385: 00 00 00    ; 
00002388: 7F 44 44 60 ; font_116 defb 0x7f, 0x44, 0x44, 0x60, 0x00, 0x00, 0x00
0000238C: 00 00 00    ; 
0000238F: 7C 40 40 7C ; font_117 defb 0x7c, 0x40, 0x40, 0x7c, 0x00, 0x00, 0x00
00002393: 00 00 00    ; 
00002396: 7C 20 10 0C ; font_118 defb 0x7c, 0x20, 0x10, 0x0c, 0x00, 0x00, 0x00
0000239A: 00 00 00    ; 
0000239D: 7C 40 40 7C ; font_119 defb 0x7c, 0x40, 0x40, 0x7c, 0x40, 0x40, 0x7c
000023A1: 40 40 7C    ; 
000023A4: 6C 10 10 6C ; font_120 defb 0x6c, 0x10, 0x10, 0x6c, 0x00, 0x00, 0x00
000023A8: 00 00 00    ; 
000023AB: BC A0 A0 FC ; font_121 defb 0xbc, 0xa0, 0xa0, 0xfc, 0x00, 0x00, 0x00
000023AF: 00 00 00    ; 
000023B2: 64 54 54 4C ; font_122 defb 0x64, 0x54, 0x54, 0x4c, 0x00, 0x00, 0x00
000023B6: 00 00 00    ; 
000023B9: 08 3E 41 00 ; font_123 defb 0x08, 0x3e, 0x41, 0x00, 0x00, 0x00, 0x00
000023BD: 00 00 00    ; 
000023C0: FF 00 00 00 ; font_124 defb 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
000023C4: 00 00 00    ; 
000023C7: 41 3E 08 00 ; font_125 defb 0x41, 0x3e, 0x08, 0x00, 0x00, 0x00, 0x00
000023CB: 00 00 00    ; 
000023CE: 1C 04 1C 10 ; font_126 defb 0x1c, 0x04, 0x1c, 0x10, 0x1c, 0x00, 0x00
000023D2: 1C 00 00    ; 
000023D5:             ; 
000023D5:             ; INCLUDE generalDefinitions.s
000023D8:             ; ALIGN
000023D8: 01          ; bmask0      DEFB &01
000023D9: 02          ; bmask1      DEFB &02
000023DA: 04          ; bmask2      DEFB &04
000023DB: 08          ; bmask3      DEFB &08
000023DC: 10          ; bmask4      DEFB &10
000023DD: 20          ; bmask5      DEFB &20
000023DE: 40          ; bmask6      DEFB &40
000023DF: 80          ; bmask7      DEFB &80
000023E0: AC000000    ; addr_LCD        DEFW 0xAC00_0000
000023E4: AC0383FF    ; addr_LCD_end    DEFW 0xAC03_83FF
000023E8: 000003C0    ; LCD_width       DEFW 960
000023EC: 00000018    ; charwidth       DEFW 24
000023F0: 00001E00    ; LCD_linediff    DEFW 7680
000023F4: 00000000    ; WHITE           DEFW     &00
000023F8: 000000FF    ; BLACK           DEFW     &FF
000023FC: 00000007    ; FONT_WIDTH      DEFW     7
00002400: 00000008    ; FONT_HEIGHT     DEFW     8
00002404: 00          ; nullstring      DEFB &00
00002405: 08 00       ; backspace       DEFB &08,0
00002407: 09 00       ; HT              DEFB &09,0
00002409: 0A 00       ; LF              DEFB &0A,0
0000240B: 0B 00       ; VT              DEFB &0B,0
0000240D: 0C 00       ; FF              DEFB &0C,0
0000240F: 0D 00       ; CR              DEFB &0D,0
00002414:             ; ALIGN
00002414:             ; 
00002414:             ; ALIGN
00002414:             ; 
00002414:             ; usercode
00002414:             ; 
00002414: E24F000F    ; ADRL      R0, FF
00002418: EB000054    ; BL printstr
0000241C: E28F00D3    ; ADRL      R0, test3 ;print hello world
00002420: E2800C02    ; 
00002424: EB000051    ; BL printstr
00002428: E24F0027    ; ADRL      R0, LF ;move cursor down by 1
0000242C: EB00004F    ; BL printstr
00002430: E28F00BD    ; ADRL      R0, test2 ;print C
00002434: E2800C02    ; 
00002438: EB00004C    ; BL printstr
0000243C: E24F003B    ; ADRL      R0, LF ;move cursor down by 1
00002440: EB00004A    ; BL printstr
00002444: E28F0E29    ; ADRL      R0, test ;print This should be on line 3
00002448: EB000048    ; BL printstr
0000244C: EAFFF726    ; B halt
00002450:             ; 
00002450:             ; ;definitions
00002450:             ; INCLUDE lcd.s
00002450:             ; ;###############################################
00002450:             ; ;# Written By: Sam da Costa                    #
00002450:             ; ;# Uni ID: p11469sd                            #
00002450:             ; ;# Exercise:  3                                #
00002450:             ; ;# Purpose: This file contains the subroutines #
00002450:             ; ;# printc and printstr to enable terminal      #
00002450:             ; ;# printing                                    #
00002450:             ; ;###############################################
00002450:             ; 
00002450:             ; ALIGN
00002450:             ; printc
00002450:             ; ;takes parameter R0 <- address of character
00002450:             ; ;leaf procedure
00002450: E92D1FFE    ; PUSH {R1 - R12}
00002454:             ; ;setup
00002454: E51F1368    ; LDR         R1, cursorposx
00002458: E51F2368    ; LDR         R2, cursorposy
0000245C: E3A03000    ; MOV         R3, #0
00002460: E3E04000    ; MOV         R4, #-1
00002464: E24F6094    ; ADRL        R6, bmask0
00002468:             ; ; Corrects cursors for newline if needed
00002468: E3510028    ; CMP         R1, #40
0000246C: A2411028    ; SUBGE       R1, R1, #40
00002470: A2822001    ; ADDGE       R2, R2, #1
00002474:             ; ;calculates base address to draw from
00002474: E51F808C    ; LDR         R8, LCD_linediff
00002478: E0080298    ; MUL         R8, R8, R2
0000247C: E51F9098    ; LDR         R9, charwidth
00002480: E0090199    ; MUL         R9, R9, R1
00002484: E0888009    ; ADD         R8, R8, R9
00002488: E51F90B0    ; LDR         R9, addr_LCD
0000248C: E0888009    ; ADD         R8, R8, R9        ;base now in R8, R9 free
00002490:             ; ;----
00002490:             ; ;handles incrememts of byte and bit
00002490:             ; ;this procedure uses byte and bit as x and y respectively
00002490:             ; next
00002490: E3540007    ; CMP         R4, #7
00002494: 03A04000    ; MOVEQ       R4, #0
00002498: 02833001    ; ADDEQ       R3, R3, #1
0000249C: 12844001    ; ADDNE       R4, R4, #1
000024A0: E3530007    ; CMP         R3, #7
000024A4: 0A000015    ; BEQ         POSTEND
000024A8:             ; 
000024A8:             ; 
000024A8:             ; 
000024A8:             ; 
000024A8:             ; 
000024A8: E7D05003    ; LDRB        R5, [R0, R3] ;loads the font byte
000024AC: E7D67004    ; LDRB        R7, [R6, R4] ;loads the mask
000024B0: E0075005    ; AND         R5, R7, R5 ; check the bit
000024B4:             ; 
000024B4:             ; ;calculates address to write to
000024B4: E3A09003    ; MOV         R9, #3
000024B8: E0090399    ; MUL         R9, R9, R3
000024BC: E51FA0DC    ; LDR         R10, LCD_width
000024C0: E00A049A    ; MUL         R10, R10, R4
000024C4: E089900A    ; ADD         R9, R9, R10
000024C8: E0899008    ; ADD         R9, R9, R8      ;address to write in R9
000024CC:             ; 
000024CC: E1550007    ; CMP         R5, R7 ;determine which colour to draw in
000024D0: 0A000000    ; BEQ high
000024D4: 1A000004    ; BNE low
000024D8:             ; 
000024D8:             ; high ;no colour support yet - this would need to be changed
000024D8: E55FA0EC    ; LDRB R10, WHITE
000024DC: E4C9A001    ; STRB R10, [R9], #1
000024E0: E4C9A001    ; STRB R10, [R9], #1
000024E4: E549A000    ; STRB R10, [R9]
000024E8: EAFFFFE8    ; B next
000024EC:             ; 
000024EC:             ; low
000024EC: E55FA0FC    ; LDRB R10, BLACK
000024F0: E4C9A001    ; STRB R10, [R9], #1
000024F4: E4C9A001    ; STRB R10, [R9], #1
000024F8: E549A000    ; STRB R10, [R9]
000024FC: EAFFFFE3    ; B next
00002500:             ; 
00002500:             ; POSTEND
00002500:             ; ;draws the 8th blank line
00002500: E3A0A003    ; MOV   R10, #3
00002504: E009039A    ; MUL   R9, R10, R3
00002508: E51FA128    ; LDR   R10, LCD_width
0000250C: E00A049A    ; MUL   R10, R10, R4
00002510: E089900A    ; ADD   R9, R9, R10
00002514: E51FA13C    ; LDR   R10, addr_LCD
00002518: E089900A    ; ADD   R9, R9, R10
0000251C: E51FB138    ; LDR   R11, charwidth
00002520: E00A0B91    ; MUL   R10, R1, R11
00002524: E08A9009    ; ADD   R9, R10, R9
00002528: E51FB140    ; LDR   R11, LCD_linediff
0000252C: E00A0B92    ; MUL   R10, R2, R11
00002530: E08A9009    ; ADD   R9, R10, R9
00002534:             ; 
00002534: E55FA144    ; LDRB  R10, BLACK
00002538: E4C9A001    ; STRB  R10, [R9], #1
0000253C: E4C9A001    ; STRB  R10, [R9], #1
00002540: E549A000    ; STRB  R10, [R9]
00002544: E2844001    ; ADD   R4, R4, #1
00002548: E3540008    ; CMP   R4, #8 ;re-uses bit counter reg
0000254C: 1AFFFFEB    ; BNE POSTEND
00002550:             ; 
00002550:             ; ;update cursor positions below
00002550: E2811001    ; ADD   R1, R1, #1
00002554: E24FC068    ; ADRL  R12, cursorposx
00002558: E24CCB01    ; 
0000255C: E50C1000    ; STR   R1, [R12]
00002560: E24FCE47    ; ADRL  R12, cursorposy
00002564: E50C2000    ; STR   R2, [R12]
00002568:             ; 
00002568:             ; 
00002568:             ; 
00002568:             ; ;return to program
00002568: E8BD1FFE    ; POP {R1 - R12}
0000256C: E1A0F00E    ; MOV PC, LR
00002570:             ; 
00002570:             ; ALIGN
00002570:             ; printstr
00002570:             ; ; address at R0
00002570:             ; ; assume LR was pushed
00002570: E92D01FE    ; PUSH {R1 - R8}
00002574: E92D4000    ; PUSH {LR}
00002578: E1A08000    ; MOV           R8, R0        ; R0 will be overwritten soon
0000257C:             ; printnextc
0000257C: E4D81001    ; LDRB          R1, [R8], #1  ; get the next character
00002580: E2512020    ; SUBS          R2, R1, #&20  ; subtract to get the ascii value to a known base
00002584: BA000006    ; BLT control                 ; if branch taken: char is a control symbol else: char is an ascii 
                      ; character
00002588: E24F3054    ; ADRL          R3, font_32
0000258C: E2433B01    ; 
00002590: E3A04007    ; MOV           R4, #7
00002594: E0020492    ; MUL           R2, R2, R4    ; calculate offset to correct font
00002598: E0830002    ; ADD           R0, R3, R2
0000259C: EBFFFFAB    ; BL printc
000025A0: EAFFFFF5    ; B printnextc
000025A4:             ; 
000025A4:             ; 
000025A4:             ; ; determines which control code needs executing
000025A4:             ; control
000025A4: E3510000    ; CMP           R1, #00
000025A8: 0A000048    ; BEQ           exitstring      ; terminate if 0 seen
000025AC:             ; 
000025AC: E3510008    ; CMP           R1, #&08
000025B0: 0A000009    ; BEQ           c_backspace
000025B4:             ; 
000025B4: E3510009    ; CMP           R1, #&09
000025B8: 0A000017    ; BEQ           c_HT
000025BC:             ; 
000025BC: E351000A    ; CMP           R1, #&0A
000025C0: 0A000021    ; BEQ           c_LF
000025C4:             ; 
000025C4: E351000B    ; CMP           R1, #&0B
000025C8: 0A000026    ; BEQ           c_VT
000025CC:             ; 
000025CC: E351000C    ; CMP           R1, #&0C
000025D0: 0A00002B    ; BEQ           c_FF
000025D4:             ; 
000025D4: E351000D    ; CMP           R1, #&0D
000025D8: 0A000037    ; BEQ           c_CR
000025DC:             ; 
000025DC:             ; 
000025DC:             ; ;the following methods change the cursorposx, cursorposy values
000025DC:             ; ;such that the cursor is in the correct position after a control code
000025DC:             ; ;using R5,6,7
000025DC:             ; c_backspace
000025DC: E51F54F0    ; LDR     R5, cursorposx
000025E0: E51F64F0    ; LDR     R6, cursorposy
000025E4: E3550000    ; CMP     R5, #0
000025E8: 1A000004    ; BNE     subtract
000025EC: E3560000    ; CMP     R6, #0
000025F0: 0A000003    ; BEQ     quitcontrol
000025F4: E2466001    ; SUB     R6, R6, #1
000025F8: E3A05027    ; MOV     R5, #39
000025FC: EA000000    ; B quitcontrol
00002600:             ; 
00002600:             ; subtract
00002600: E2455001    ; SUB     R5, R5, #1
00002604:             ; quitcontrol
00002604: E24F7F46    ; ADRL    R7, cursorposx
00002608: E2477B01    ; 
0000260C: E5075000    ; STR     R5, [R7]
00002610: E24F7E52    ; ADRL    R7, cursorposy
00002614: E5076000    ; STR     R6, [R7]
00002618: EAFFFFD7    ; B printnextc
0000261C:             ; 
0000261C:             ; c_HT
0000261C: E51F5530    ; LDR     R5, cursorposx
00002620: E51F6530    ; LDR     R6, cursorposy
00002624: E2855001    ; ADD     R5, R5, #1
00002628: E3550028    ; CMP     R5, #40
0000262C: A2455028    ; SUBGE   R5, R5, #40
00002630: A2866001    ; ADDGE   R6, R6, #1
00002634: E24F7F52    ; ADRL    R7, cursorposx
00002638: E2477B01    ; 
0000263C: E5075000    ; STR     R5, [R7]
00002640: E24F7E55    ; ADRL    R7, cursorposy
00002644: E5076000    ; STR     R6, [R7]
00002648: EAFFFFCB    ; B printnextc
0000264C:             ; 
0000264C:             ; c_LF
0000264C: E51F655C    ; LDR     R6, cursorposy
00002650: E356001D    ; CMP     R6, #29
00002654: 12866001    ; ADDNE   R6, R6, #1
00002658: E24F7F5A    ; ADRL    R7, cursorposy
0000265C: E2477B01    ; 
00002660: E5076000    ; STR     R6, [R7]
00002664: EAFFFFC4    ; B printnextc
00002668:             ; 
00002668:             ; c_VT
00002668: E51F6578    ; LDR     R6, cursorposy
0000266C: E3560000    ; CMP     R6, #0
00002670: C2466001    ; SUBGT   R6, R6, #1
00002674: E24F7F61    ; ADRL    R7, cursorposy
00002678: E2477B01    ; 
0000267C: E5076000    ; STR     R6, [R7]
00002680: EAFFFFBD    ; B printnextc
00002684:             ; 
00002684:             ; c_FF
00002684: E51F52AC    ; LDR     R5, addr_LCD
00002688: E55F6298    ; LDRB    R6, BLACK
0000268C: E51F72B0    ; LDR     R7, addr_LCD_end
00002690:             ; screenblankloop
00002690: E4C56001    ; STRB    R6, [R5], #1
00002694: E1550007    ; CMP     R5, R7
00002698: 1AFFFFFC    ; BNE screenblankloop
0000269C: E3A05000    ; MOV     R5, #0
000026A0: E24F6F6D    ; ADRL    R6, cursorposx
000026A4: E2466B01    ; 
000026A8: E5065000    ; STR     R5, [R6]
000026AC: E24F6F6F    ; ADRL    R6, cursorposy
000026B0: E2466B01    ; 
000026B4: E5065000    ; STR     R5, [R6]
000026B8: EAFFFFAF    ; B printnextc
000026BC:             ; 
000026BC:             ; c_CR
000026BC: E3A06000    ; MOV     R6, #0
000026C0: E24F7F75    ; ADRL    R7, cursorposx
000026C4: E2477B01    ; 
000026C8: E5076000    ; STR     R6, [R7]
000026CC: EAFFFFAA    ; B printnextc
000026D0:             ; 
000026D0:             ; ; cleanup and exit
000026D0:             ; exitstring
000026D0: E8BD4000    ; POP {LR}
000026D4: E8BD01FE    ; POP {R1 - R8}
000026D8: E1A0F00E    ; MOV PC, LR
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; ;---------------------------------------
000026DC:             ; ;  DEFINITIONS
000026DC:             ; ;---------------------------------------
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; 
000026DC:             ; align
000026DC:             ; 
000026DC: 54 68 69 73 ; test            DEFB "This should be on line 3",0 ; (lines start at 0)
000026E0: 20 73 68 6F ; 
000026E4: 75 6C 64 20 ; 
000026E8: 62 65 20 6F ; 
000026EC: 6E 20 6C 69 ; 
000026F0: 6E 65 20 33 ; 
000026F4: 00          ; 
000026F5: 43 00       ; test2           DEFB "C",0
000026F7: 48 65 6C 6C ; test3           DEFB "Hello World!",0
000026FB: 6F 20 57 6F ; 
000026FF: 72 6C 64 21 ; 
00002703: 00          ; 
00002704:             ; 

Symbol Table: Labels
: reset_handler                     00000020  Local -- ARM
: undefined_instruction_handler     00000080  Local -- ARM
: svc_handler                       00000090  Local -- ARM
: prefetch_abort_handler            00000094  Local -- ARM
: data_abort                        000000BC  Local -- ARM
: IRQ_handler                       000000E4  Local -- ARM
: FIQ_handler                       000000E8  Local -- ARM
: halt                              000000EC  Local -- ARM
: stack_user                        000000F4  Local -- ARM
: stackend_user                     000010F4  Local -- ARM
: stack_svc                         000010F4  Local -- ARM
: stackend_svc                      000020F4  Local -- ARM
: data                              000020F4  Local -- ARM
: cursorposx                        000020F4  Local -- ARM
: cursorposy                        000020F8  Local -- ARM
: MemoryError                       000020FC  Local -- ARM
: UndefinedError                    00002118  Local -- ARM
: font_32                           0000213C  Local -- ARM
: font_33                           00002143  Local -- ARM
: font_34                           0000214A  Local -- ARM
: font_35                           00002151  Local -- ARM
: font_36                           00002158  Local -- ARM
: font_37                           0000215F  Local -- ARM
: font_38                           00002166  Local -- ARM
: font_39                           0000216D  Local -- ARM
: font_40                           00002174  Local -- ARM
: font_41                           0000217B  Local -- ARM
: font_42                           00002182  Local -- ARM
: font_43                           00002189  Local -- ARM
: font_44                           00002190  Local -- ARM
: font_45                           00002197  Local -- ARM
: font_46                           0000219E  Local -- ARM
: font_47                           000021A5  Local -- ARM
: font_48                           000021AC  Local -- ARM
: font_49                           000021B3  Local -- ARM
: font_50                           000021BA  Local -- ARM
: font_51                           000021C1  Local -- ARM
: font_52                           000021C8  Local -- ARM
: font_53                           000021CF  Local -- ARM
: font_54                           000021D6  Local -- ARM
: font_55                           000021DD  Local -- ARM
: font_56                           000021E4  Local -- ARM
: font_57                           000021EB  Local -- ARM
: font_58                           000021F2  Local -- ARM
: font_59                           000021F9  Local -- ARM
: font_60                           00002200  Local -- ARM
: font_61                           00002207  Local -- ARM
: font_62                           0000220E  Local -- ARM
: font_63                           00002215  Local -- ARM
: font_64                           0000221C  Local -- ARM
: font_65                           00002223  Local -- ARM
: font_66                           0000222A  Local -- ARM
: font_67                           00002231  Local -- ARM
: font_68                           00002238  Local -- ARM
: font_69                           0000223F  Local -- ARM
: font_70                           00002246  Local -- ARM
: font_71                           0000224D  Local -- ARM
: font_72                           00002254  Local -- ARM
: font_73                           0000225B  Local -- ARM
: font_74                           00002262  Local -- ARM
: font_75                           00002269  Local -- ARM
: font_76                           00002270  Local -- ARM
: font_77                           00002277  Local -- ARM
: font_78                           0000227E  Local -- ARM
: font_79                           00002285  Local -- ARM
: font_80                           0000228C  Local -- ARM
: font_81                           00002293  Local -- ARM
: font_82                           0000229A  Local -- ARM
: font_83                           000022A1  Local -- ARM
: font_84                           000022A8  Local -- ARM
: font_85                           000022AF  Local -- ARM
: font_86                           000022B6  Local -- ARM
: font_87                           000022BD  Local -- ARM
: font_88                           000022C4  Local -- ARM
: font_89                           000022CB  Local -- ARM
: font_90                           000022D2  Local -- ARM
: font_91                           000022D9  Local -- ARM
: font_92                           000022E0  Local -- ARM
: font_93                           000022E7  Local -- ARM
: font_94                           000022EE  Local -- ARM
: font_95                           000022F5  Local -- ARM
: font_96                           000022FC  Local -- ARM
: font_97                           00002303  Local -- ARM
: font_98                           0000230A  Local -- ARM
: font_99                           00002311  Local -- ARM
: font_100                          00002318  Local -- ARM
: font_101                          0000231F  Local -- ARM
: font_102                          00002326  Local -- ARM
: font_103                          0000232D  Local -- ARM
: font_104                          00002334  Local -- ARM
: font_105                          0000233B  Local -- ARM
: font_106                          00002342  Local -- ARM
: font_107                          00002349  Local -- ARM
: font_108                          00002350  Local -- ARM
: font_109                          00002357  Local -- ARM
: font_110                          0000235E  Local -- ARM
: font_111                          00002365  Local -- ARM
: font_112                          0000236C  Local -- ARM
: font_113                          00002373  Local -- ARM
: font_114                          0000237A  Local -- ARM
: font_115                          00002381  Local -- ARM
: font_116                          00002388  Local -- ARM
: font_117                          0000238F  Local -- ARM
: font_118                          00002396  Local -- ARM
: font_119                          0000239D  Local -- ARM
: font_120                          000023A4  Local -- ARM
: font_121                          000023AB  Local -- ARM
: font_122                          000023B2  Local -- ARM
: font_123                          000023B9  Local -- ARM
: font_124                          000023C0  Local -- ARM
: font_125                          000023C7  Local -- ARM
: font_126                          000023CE  Local -- ARM
: bmask0                            000023D8  Local -- ARM
: bmask1                            000023D9  Local -- ARM
: bmask2                            000023DA  Local -- ARM
: bmask3                            000023DB  Local -- ARM
: bmask4                            000023DC  Local -- ARM
: bmask5                            000023DD  Local -- ARM
: bmask6                            000023DE  Local -- ARM
: bmask7                            000023DF  Local -- ARM
: addr_LCD                          000023E0  Local -- ARM
: addr_LCD_end                      000023E4  Local -- ARM
: LCD_width                         000023E8  Local -- ARM
: charwidth                         000023EC  Local -- ARM
: LCD_linediff                      000023F0  Local -- ARM
: WHITE                             000023F4  Local -- ARM
: BLACK                             000023F8  Local -- ARM
: FONT_WIDTH                        000023FC  Local -- ARM
: FONT_HEIGHT                       00002400  Local -- ARM
: nullstring                        00002404  Local -- ARM
: backspace                         00002405  Local -- ARM
: HT                                00002407  Local -- ARM
: LF                                00002409  Local -- ARM
: VT                                0000240B  Local -- ARM
: FF                                0000240D  Local -- ARM
: CR                                0000240F  Local -- ARM
: usercode                          00002414  Local -- ARM
: printc                            00002450  Local -- ARM
: next                              00002490  Local -- ARM
: high                              000024D8  Local -- ARM
: low                               000024EC  Local -- ARM
: POSTEND                           00002500  Local -- ARM
: printstr                          00002570  Local -- ARM
: printnextc                        0000257C  Local -- ARM
: control                           000025A4  Local -- ARM
: c_backspace                       000025DC  Local -- ARM
: subtract                          00002600  Local -- ARM
: quitcontrol                       00002604  Local -- ARM
: c_HT                              0000261C  Local -- ARM
: c_LF                              0000264C  Local -- ARM
: c_VT                              00002668  Local -- ARM
: c_FF                              00002684  Local -- ARM
: screenblankloop                   00002690  Local -- ARM
: c_CR                              000026BC  Local -- ARM
: exitstring                        000026D0  Local -- ARM
: test                              000026DC  Local -- ARM
: test2                             000026F5  Local -- ARM
: test3                             000026F7  Local -- ARM
